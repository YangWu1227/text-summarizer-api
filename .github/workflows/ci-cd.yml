name: CI/CD Pipeline

on: 
  push:
    branches:
      - main
    paths:
      - 'project/app/**'
      - 'project/migrations/**'
      - 'project/pyproject.toml'
      - 'project/pdm.lock'
      - 'project/docker/prod.Dockerfile'
  pull_request:
    branches:
      - main
    paths:
      - 'project/app/**'
      - 'project/migrations/**'
      - 'project/pyproject.toml'
      - 'project/pdm.lock'
      - 'project/docker/prod.Dockerfile'

env:
  IMAGE: ghcr.io/${{ github.repository | toLowerCase() }}/${{ secrets.GH_PACKAGES_IMAGE_NAME }}

jobs:
  publish:
    name: Publish Production Docker Image
    runs-on: ubuntu-latest

    steps:
      - id: checkout-repo
        uses: actions/checkout@v4

      - id: login-ghcr
        run: echo "${GH_PAT}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
        env:
          GH_PAT: ${{ secrets.GH_PAT }}

      - id: pull-docker-image
        run: |
          docker pull ${{ env.IMAGE }}:latest || true

      - id: build-docker-image
        run: |
          docker build \
            --cache-from ${{ env.IMAGE }}:latest \
            --tag ${{ env.IMAGE }}:latest \
            --file ./project/docker/prod.Dockerfile \
            ./project

      - id: push-docker-image
        run: |
          docker push ${{ env.IMAGE }}:latest

  deploy:
    name: Deploy to Heroku
    runs-on: ubuntu-latest
    needs: [publish]
    env:
      HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
      HEROKU_REGISTRY_IMAGE: registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web

    steps:
      - id: checkout-repo
        uses: actions/checkout@v4

      - id: login-ghcr
        run: echo "${GH_PAT}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
        env:
          GH_PAT: ${{ secrets.GH_PAT }}

      - id: pull-docker-image
        run: docker pull ${{ env.IMAGE }}:latest || true

      - id: build-heroku-image
        run: |
          docker build \
            --cache-from ${{ env.IMAGE }}:latest \
            --tag ${{ env.HEROKU_REGISTRY_IMAGE }}:latest \
            --file ./project/docker/prod.Dockerfile \
            ./project

      - id: login-heroku-registry
        run: docker login --username=_ --password="${{ secrets.HEROKU_AUTH_TOKEN }}" registry.heroku.com

      - id: push-heroku-image
        run: docker push ${{ env.HEROKU_REGISTRY_IMAGE }}:latest

      - id: set-env-vars
        run: |
          echo "HEROKU_REGISTRY_IMAGE=${{ env.HEROKU_REGISTRY_IMAGE }}" >> $GITHUB_ENV
          echo "::add-mask::${{ secrets.HEROKU_AUTH_TOKEN }}"  
          echo "HEROKU_AUTH_TOKEN=${{ secrets.HEROKU_AUTH_TOKEN }}" >> $GITHUB_ENV

      - id: release-heroku-app
        run: |
          chmod +x ./project/scripts/release.sh
          ./project/scripts/release.sh
